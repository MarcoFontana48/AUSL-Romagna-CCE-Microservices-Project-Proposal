name: Build and Push Docker Images

on:
  push:
    branches: [ dev ]

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_REPOSITORY: marcofontana17/cce_prototipo

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Push Docker Images

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata for Api Gateway
        id: meta1
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REPOSITORY }}
          tags: |
            type=ref,event=branch,suffix=-api_gateway
            type=sha,prefix=dev-,suffix=-api_gateway
            type=raw,value=api_gateway-latest,enable={{is_default_branch}}

      - name: Extract metadata for Service
        id: meta2
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REPOSITORY }}
          tags: |
            type=ref,event=branch,suffix=-service
            type=sha,prefix=dev-,suffix=-service
            type=raw,value=service-latest,enable={{is_default_branch}}

      - name: Build and push Api Gateway
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./api_gateway/Dockerfile
          push: true
          tags: ${{ steps.meta1.outputs.tags }}
          labels: ${{ steps.meta1.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Service
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./service/Dockerfile
          push: true
          tags: ${{ steps.meta2.outputs.tags }}
          labels: ${{ steps.meta2.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max